
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSADD_OP CIRCLE COLOR IDENTIFIER MUL_OP NUMBER POINT PRINT RADIUS RECT SIZE WHILE program : statement  program : statement ';' program  statement : assignation\n        | structure\n        | shape  statement : PRINT expression  structure : WHILE expression '{' program '}'  shape : circle_g \n        | rect_g  circle_g : CIRCLE '{' point_expression ',' RADIUS '(' expression ')' ',' color_expression '}'  rect_g : RECT '{' point_expression ',' size_expression ',' color_expression '}'  point_expression : POINT '(' expression ',' expression ')'  size_expression : SIZE '(' expression ',' expression ')'  color_expression : COLOR '(' expression ',' expression ',' expression ')' expression : expression ADD_OP expression\n            | expression MUL_OP expressionexpression : NUMBER\n        | IDENTIFIER expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS assignation : IDENTIFIER '=' assign_expression  assign_expression : expression\n        | shape "
    
_lr_action_items = {'PRINT':([0,13,31,],[6,6,6,]),'IDENTIFIER':([0,6,8,13,15,18,19,24,25,31,40,47,48,50,59,60,65,69,],[7,17,17,7,17,17,17,17,17,7,17,17,17,17,17,17,17,17,]),'WHILE':([0,13,31,],[8,8,8,]),'CIRCLE':([0,13,19,31,],[11,11,11,11,]),'RECT':([0,13,19,31,],[12,12,12,12,]),'$end':([1,2,3,4,5,9,10,14,16,17,23,26,28,29,30,35,36,37,42,58,67,],[0,-1,-3,-4,-5,-8,-9,-6,-17,-18,-2,-20,-21,-22,-23,-15,-16,-19,-7,-11,-10,]),'}':([2,3,4,5,9,10,14,16,17,23,26,28,29,30,35,36,37,38,42,53,58,64,67,71,],[-1,-3,-4,-5,-8,-9,-6,-17,-18,-2,-20,-21,-22,-23,-15,-16,-19,42,-7,58,-11,67,-10,-14,]),';':([2,3,4,5,9,10,14,16,17,26,28,29,30,35,36,37,42,58,67,],[13,-3,-4,-5,-8,-9,-6,-17,-18,-20,-21,-22,-23,-15,-16,-19,-7,-11,-10,]),'NUMBER':([6,8,15,18,19,24,25,40,47,48,50,59,60,65,69,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'(':([6,8,15,18,19,24,25,33,40,43,46,47,48,50,54,59,60,65,69,],[18,18,18,18,18,18,18,40,18,47,50,18,18,18,59,18,18,18,18,]),'ADD_OP':([6,8,14,15,16,17,18,19,20,24,25,26,27,29,35,36,37,40,44,47,48,50,51,52,55,59,60,62,63,65,68,69,70,],[15,15,24,15,-17,-18,15,15,24,15,15,-20,24,24,-15,-16,-19,15,24,15,15,15,24,24,24,15,15,24,24,15,24,15,24,]),'=':([7,],[19,]),'{':([11,12,16,17,20,26,35,36,37,],[21,22,-17,-18,31,-20,-15,-16,-19,]),'MUL_OP':([14,16,17,20,26,27,29,35,36,37,44,51,52,55,62,63,68,70,],[25,-17,-18,25,-20,25,25,25,-16,-19,25,25,25,25,25,25,25,25,]),')':([16,17,26,27,35,36,37,51,52,63,70,],[-17,-18,-20,37,-15,-16,-19,56,57,66,71,]),',':([16,17,26,32,34,35,36,37,44,45,55,56,57,62,66,68,],[-17,-18,-20,39,41,-15,-16,-19,48,49,60,61,-12,65,-13,69,]),'POINT':([21,22,],[33,33,]),'RADIUS':([39,],[43,]),'SIZE':([41,],[46,]),'COLOR':([49,61,],[54,54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,13,31,],[1,23,38,]),'statement':([0,13,31,],[2,2,2,]),'assignation':([0,13,31,],[3,3,3,]),'structure':([0,13,31,],[4,4,4,]),'shape':([0,13,19,31,],[5,5,30,5,]),'circle_g':([0,13,19,31,],[9,9,9,9,]),'rect_g':([0,13,19,31,],[10,10,10,10,]),'expression':([6,8,15,18,19,24,25,40,47,48,50,59,60,65,69,],[14,20,26,27,29,35,36,44,51,52,55,62,63,68,70,]),'assign_expression':([19,],[28,]),'point_expression':([21,22,],[32,34,]),'size_expression':([41,],[45,]),'color_expression':([49,61,],[53,64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program_statement','parser5.py',7),
  ('program -> statement ; program','program',3,'p_program_recursive','parser5.py',11),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',15),
  ('statement -> structure','statement',1,'p_statement','parser5.py',16),
  ('statement -> shape','statement',1,'p_statement','parser5.py',17),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',21),
  ('structure -> WHILE expression { program }','structure',5,'p_structure','parser5.py',25),
  ('shape -> circle_g','shape',1,'p_shape','parser5.py',29),
  ('shape -> rect_g','shape',1,'p_shape','parser5.py',30),
  ('circle_g -> CIRCLE { point_expression , RADIUS ( expression ) , color_expression }','circle_g',11,'p_circle_g','parser5.py',34),
  ('rect_g -> RECT { point_expression , size_expression , color_expression }','rect_g',8,'p_rect_g','parser5.py',38),
  ('point_expression -> POINT ( expression , expression )','point_expression',6,'p_expression_point','parser5.py',42),
  ('size_expression -> SIZE ( expression , expression )','size_expression',6,'p_expression_size','parser5.py',46),
  ('color_expression -> COLOR ( expression , expression , expression )','color_expression',8,'p_expression_color','parser5.py',50),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',54),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',55),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',59),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',60),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',64),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',68),
  ('assignation -> IDENTIFIER = assign_expression','assignation',3,'p_assign','parser5.py',72),
  ('assign_expression -> expression','assign_expression',1,'p_assign_expression','parser5.py',76),
  ('assign_expression -> shape','assign_expression',1,'p_assign_expression','parser5.py',77),
]
