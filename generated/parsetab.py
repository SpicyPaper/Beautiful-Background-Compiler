
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSADD_OP CIRCLE COLOR IDENTIFIER MUL_OP NUMBER POINT PRINT RADIUS RECT SIZE WHILE program : statement  program : statement ';' program  statement : assignation\n        | structure\n        | shape  statement : PRINT expression  structure : WHILE expression '{' program '}'  shape : circle_g \n        | rect_g  circle_g : CIRCLE '{' point_expression ',' RADIUS '(' expression ')' ',' color_expression '}'  rect_g : RECT '{' point_expression ',' size_expression ',' color_expression '}'  point_expression : POINT '(' expression ',' expression ')'  size_expression : SIZE '(' expression ',' expression ')'  color_expression : COLOR '(' expression ',' expression ',' expression ')' expression : expression ADD_OP expression\n            | expression MUL_OP expressionexpression : NUMBER\n        | IDENTIFIER expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS assignation : IDENTIFIER '=' expression "
    
_lr_action_items = {'$end':([1,4,5,7,9,10,12,13,14,17,23,29,31,33,34,35,43,55,66,],[-4,-1,0,-5,-8,-3,-9,-17,-18,-6,-20,-2,-21,-19,-15,-16,-7,-11,-10,]),'PRINT':([0,19,30,],[2,2,2,]),'COLOR':([46,61,],[51,51,]),')':([13,14,23,24,33,34,35,49,53,60,68,],[-17,-18,-20,33,-19,-15,-16,54,58,63,69,]),'RECT':([0,19,30,],[3,3,3,]),'POINT':([18,22,],[27,27,]),'SIZE':([37,],[42,]),'(':([2,6,15,16,21,25,26,27,36,42,44,45,47,48,51,56,57,62,67,],[16,16,16,16,16,16,16,36,16,47,48,16,16,16,56,16,16,16,16,]),'MUL_OP':([13,14,17,20,23,24,31,33,34,35,40,49,52,53,59,60,65,68,],[-17,-18,26,26,-20,26,26,-19,26,-16,26,26,26,26,26,26,26,26,]),'=':([8,],[21,]),'NUMBER':([2,6,15,16,21,25,26,36,45,47,48,56,57,62,67,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'CIRCLE':([0,19,30,],[11,11,11,]),'RADIUS':([39,],[44,]),'ADD_OP':([2,6,13,14,15,16,17,20,21,23,24,25,26,31,33,34,35,36,40,45,47,48,49,52,53,56,57,59,60,62,65,67,68,],[15,15,-17,-18,15,15,25,25,15,-20,25,15,15,25,-19,-15,-16,15,25,15,15,15,25,25,25,15,15,25,25,15,25,15,25,]),'}':([1,4,7,9,10,12,13,14,17,23,29,31,33,34,35,38,43,50,55,64,66,69,],[-4,-1,-5,-8,-3,-9,-17,-18,-6,-20,-2,-21,-19,-15,-16,43,-7,55,-11,66,-10,-14,]),',':([13,14,23,28,32,33,34,35,40,41,52,54,58,59,63,65,],[-17,-18,-20,37,39,-19,-15,-16,45,46,57,-12,61,62,-13,67,]),'WHILE':([0,19,30,],[6,6,6,]),';':([1,4,7,9,10,12,13,14,17,23,31,33,34,35,43,55,66,],[-4,19,-5,-8,-3,-9,-17,-18,-6,-20,-21,-19,-15,-16,-7,-11,-10,]),'IDENTIFIER':([0,2,6,15,16,19,21,25,26,30,36,45,47,48,56,57,62,67,],[8,14,14,14,14,8,14,14,14,8,14,14,14,14,14,14,14,14,]),'{':([3,11,13,14,20,23,33,34,35,],[18,22,-17,-18,30,-20,-19,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,19,30,],[5,29,38,]),'point_expression':([18,22,],[28,32,]),'rect_g':([0,19,30,],[12,12,12,]),'expression':([2,6,15,16,21,25,26,36,45,47,48,56,57,62,67,],[17,20,23,24,31,34,35,40,49,52,53,59,60,65,68,]),'structure':([0,19,30,],[1,1,1,]),'color_expression':([46,61,],[50,64,]),'size_expression':([37,],[41,]),'statement':([0,19,30,],[4,4,4,]),'shape':([0,19,30,],[7,7,7,]),'assignation':([0,19,30,],[10,10,10,]),'circle_g':([0,19,30,],[9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program_statement','parser5.py',9),
  ('program -> statement ; program','program',3,'p_program_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> shape','statement',1,'p_statement','parser5.py',19),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',23),
  ('structure -> WHILE expression { program }','structure',5,'p_structure','parser5.py',27),
  ('shape -> circle_g','shape',1,'p_shape','parser5.py',31),
  ('shape -> rect_g','shape',1,'p_shape','parser5.py',32),
  ('circle_g -> CIRCLE { point_expression , RADIUS ( expression ) , color_expression }','circle_g',11,'p_circle_g','parser5.py',36),
  ('rect_g -> RECT { point_expression , size_expression , color_expression }','rect_g',8,'p_rect_g','parser5.py',40),
  ('point_expression -> POINT ( expression , expression )','point_expression',6,'p_expression_point','parser5.py',44),
  ('size_expression -> SIZE ( expression , expression )','size_expression',6,'p_expression_size','parser5.py',48),
  ('color_expression -> COLOR ( expression , expression , expression )','color_expression',8,'p_expression_color','parser5.py',52),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',56),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',57),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',61),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',62),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',66),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',70),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',74),
]
