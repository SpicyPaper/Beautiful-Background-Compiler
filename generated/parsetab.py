
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSADD_OP AROUND CIRCLE COLOR FOR IDENTIFIER MUL_OP NUMBER POINT POLYGON PRINT RADIUS RANDOM RECT ROTATE SIZE TIME TRANSLATE program : subprogram  subprogram : statement ';'  subprogram : statement ';' subprogram  statement : assignation\n        | assignation_shape\n        | assignation_color\n        | assignation_point\n        | assignation_size\n        | assignation_time\n        | structure\n        | shape\n        | animation  statement : PRINT expression  structure : FOR '(' expression ',' expression ',' expression ')' '{' subprogram '}'  animation : translation  translation : TRANSLATE '(' animation_param ',' point_expression ')'  translation : ROTATE '(' animation_param ',' expression ',' AROUND '(' point_expression ')' ')'  animation_param : IDENTIFIER  animation_param : shape  shape : circle_g \n        | rect_g\n        | polygon_g  circle_g : CIRCLE '{' point_expression ',' RADIUS '(' expression ')' ',' color_expression '}'  rect_g : RECT '{' point_expression ',' size_expression ',' color_expression '}'  polygon_g : POLYGON '{' point_expression ',' '(' points_expression ')' ',' color_expression '}'  points_expression : point_expression  points_expression : point_expression ',' points_expression  point_expression : POINT '(' expression ',' expression ')'  size_expression : SIZE '(' expression ',' expression ')'  color_expression : COLOR '(' expression ',' expression ',' expression ')' expression : expression ADD_OP expression\n            | expression MUL_OP expressionexpression : NUMBER\n        | IDENTIFIER expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS assignation_size : IDENTIFIER '=' size_expression  assignation_point : IDENTIFIER '=' point_expression  assignation_color : IDENTIFIER '=' color_expression  assignation_shape : IDENTIFIER '=' shape  assignation_time : IDENTIFIER '=' TIME '(' expression ')'  assignation : IDENTIFIER '=' expression expression : RANDOM '(' expression ')' expression : RANDOM '(' expression ',' expression ')' "
    
_lr_action_items = {'POLYGON':([0,28,29,30,31,120,],[2,2,2,2,2,2,]),'PRINT':([0,28,120,],[23,23,23,]),'SIZE':([30,64,],[50,50,]),',':([4,6,22,33,37,39,41,42,44,45,46,55,56,59,72,73,74,75,77,78,79,80,81,83,87,88,101,107,109,112,113,116,118,124,131,],[-20,-21,-22,-34,-33,62,64,65,-18,-19,66,70,71,-36,86,-35,-32,-31,90,91,92,93,94,96,-43,100,111,117,-44,-28,-24,-29,123,-25,-23,]),'{':([2,8,21,114,],[25,26,32,120,]),'MUL_OP':([33,37,38,42,51,58,59,72,73,74,75,77,79,80,81,82,83,87,99,102,104,106,107,108,109,122,],[-34,-33,60,60,60,60,-36,60,-35,-32,60,60,60,60,60,60,60,-43,60,60,60,60,60,60,-44,60,]),';':([1,3,4,6,7,9,11,13,16,17,19,20,22,24,33,37,38,47,48,49,51,53,59,73,74,75,87,95,97,109,112,113,116,124,127,129,130,131,],[-15,-7,-20,-21,-9,-5,-4,28,-10,-12,-6,-8,-22,-11,-34,-33,-13,-37,-38,-40,-42,-39,-36,-35,-32,-31,-43,-41,-16,-44,-28,-24,-29,-25,-30,-14,-17,-23,]),'IDENTIFIER':([0,23,27,28,29,30,31,35,36,57,60,61,63,65,66,67,68,69,86,90,92,94,96,98,117,120,],[15,33,33,15,44,33,44,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,15,]),'TIME':([30,],[52,]),'FOR':([0,28,120,],[10,10,10,]),'ROTATE':([0,28,120,],[14,14,14,]),'(':([10,14,18,23,27,30,34,35,36,40,50,52,54,57,60,61,62,63,65,66,67,68,69,85,86,90,92,94,96,98,105,117,],[27,29,31,35,35,35,57,35,35,63,67,68,69,35,35,35,76,35,35,35,35,35,35,98,35,35,35,35,35,35,115,35,]),'RANDOM':([23,27,30,35,36,57,60,61,63,65,66,67,68,69,86,90,92,94,96,98,117,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TRANSLATE':([0,28,120,],[18,18,18,]),'COLOR':([30,91,111,123,],[54,54,54,54,]),'NUMBER':([23,27,30,35,36,57,60,61,63,65,66,67,68,69,86,90,92,94,96,98,117,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'CIRCLE':([0,28,29,30,31,120,],[21,21,21,21,21,21,]),'POINT':([25,26,30,32,70,76,100,115,],[40,40,40,40,40,40,40,40,]),'RECT':([0,28,29,30,31,120,],[8,8,8,8,8,8,]),'$end':([5,12,28,43,],[-1,0,-2,-3,]),'}':([28,43,103,119,125,127,128,],[-2,-3,113,124,129,-30,131,]),'AROUND':([93,],[105,]),'ADD_OP':([23,27,30,33,35,36,37,38,42,51,57,58,59,60,61,63,65,66,67,68,69,72,73,74,75,77,79,80,81,82,83,86,87,90,92,94,96,98,99,102,104,106,107,108,109,117,122,],[36,36,36,-34,36,36,-33,61,61,61,36,61,-36,36,36,36,36,36,36,36,36,61,-35,-32,-31,61,61,61,61,61,61,36,-43,36,36,36,36,36,61,61,61,61,61,61,-44,36,61,]),')':([33,37,58,59,72,73,74,75,82,84,87,88,89,99,102,104,106,108,109,110,112,121,122,126,],[-34,-33,73,-36,87,-35,-32,-31,95,97,-43,-26,101,109,112,114,116,118,-44,-27,-28,126,127,130,]),'=':([15,],[30,]),'RADIUS':([71,],[85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignation_point':([0,28,120,],[3,3,3,]),'size_expression':([30,64,],[47,78,]),'circle_g':([0,28,29,30,31,120,],[4,4,4,4,4,4,]),'points_expression':([76,100,],[89,110,]),'point_expression':([25,26,30,32,70,76,100,115,],[39,41,48,56,84,88,88,121,]),'subprogram':([0,28,120,],[5,43,125,]),'expression':([23,27,30,35,36,57,60,61,63,65,66,67,68,69,86,90,92,94,96,98,117,],[38,42,51,58,59,72,74,75,77,79,80,81,82,83,99,102,104,106,107,108,122,]),'assignation':([0,28,120,],[11,11,11,]),'assignation_shape':([0,28,120,],[9,9,9,]),'program':([0,],[12,]),'statement':([0,28,120,],[13,13,13,]),'rect_g':([0,28,29,30,31,120,],[6,6,6,6,6,6,]),'translation':([0,28,120,],[1,1,1,]),'structure':([0,28,120,],[16,16,16,]),'color_expression':([30,91,111,123,],[53,103,119,128,]),'assignation_time':([0,28,120,],[7,7,7,]),'animation':([0,28,120,],[17,17,17,]),'assignation_color':([0,28,120,],[19,19,19,]),'assignation_size':([0,28,120,],[20,20,20,]),'polygon_g':([0,28,29,30,31,120,],[22,22,22,22,22,22,]),'shape':([0,28,29,30,31,120,],[24,24,45,49,45,24,]),'animation_param':([29,31,],[46,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> subprogram','program',1,'p_program_statement','parser5.py',7),
  ('subprogram -> statement ;','subprogram',2,'p_program_subprogram','parser5.py',11),
  ('subprogram -> statement ; subprogram','subprogram',3,'p_program_recursive','parser5.py',15),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',19),
  ('statement -> assignation_shape','statement',1,'p_statement','parser5.py',20),
  ('statement -> assignation_color','statement',1,'p_statement','parser5.py',21),
  ('statement -> assignation_point','statement',1,'p_statement','parser5.py',22),
  ('statement -> assignation_size','statement',1,'p_statement','parser5.py',23),
  ('statement -> assignation_time','statement',1,'p_statement','parser5.py',24),
  ('statement -> structure','statement',1,'p_statement','parser5.py',25),
  ('statement -> shape','statement',1,'p_statement','parser5.py',26),
  ('statement -> animation','statement',1,'p_statement','parser5.py',27),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',31),
  ('structure -> FOR ( expression , expression , expression ) { subprogram }','structure',11,'p_structure','parser5.py',35),
  ('animation -> translation','animation',1,'p_animation','parser5.py',39),
  ('translation -> TRANSLATE ( animation_param , point_expression )','translation',6,'p_animation_translation','parser5.py',43),
  ('translation -> ROTATE ( animation_param , expression , AROUND ( point_expression ) )','translation',11,'p_animation_rotation','parser5.py',47),
  ('animation_param -> IDENTIFIER','animation_param',1,'p_animation_param_id','parser5.py',51),
  ('animation_param -> shape','animation_param',1,'p_animation_param_shape','parser5.py',55),
  ('shape -> circle_g','shape',1,'p_shape','parser5.py',59),
  ('shape -> rect_g','shape',1,'p_shape','parser5.py',60),
  ('shape -> polygon_g','shape',1,'p_shape','parser5.py',61),
  ('circle_g -> CIRCLE { point_expression , RADIUS ( expression ) , color_expression }','circle_g',11,'p_circle_g','parser5.py',65),
  ('rect_g -> RECT { point_expression , size_expression , color_expression }','rect_g',8,'p_rect_g','parser5.py',69),
  ('polygon_g -> POLYGON { point_expression , ( points_expression ) , color_expression }','polygon_g',10,'p_polygon_g','parser5.py',73),
  ('points_expression -> point_expression','points_expression',1,'p_expression_points','parser5.py',77),
  ('points_expression -> point_expression , points_expression','points_expression',3,'p_expression_points_recursive','parser5.py',81),
  ('point_expression -> POINT ( expression , expression )','point_expression',6,'p_expression_point','parser5.py',85),
  ('size_expression -> SIZE ( expression , expression )','size_expression',6,'p_expression_size','parser5.py',89),
  ('color_expression -> COLOR ( expression , expression , expression )','color_expression',8,'p_expression_color','parser5.py',93),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',97),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',98),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',102),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',103),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',107),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',111),
  ('assignation_size -> IDENTIFIER = size_expression','assignation_size',3,'p_assign_size','parser5.py',115),
  ('assignation_point -> IDENTIFIER = point_expression','assignation_point',3,'p_assign_point','parser5.py',119),
  ('assignation_color -> IDENTIFIER = color_expression','assignation_color',3,'p_assign_color','parser5.py',123),
  ('assignation_shape -> IDENTIFIER = shape','assignation_shape',3,'p_assign_shape','parser5.py',127),
  ('assignation_time -> IDENTIFIER = TIME ( expression )','assignation_time',6,'p_assign_time','parser5.py',131),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',135),
  ('expression -> RANDOM ( expression )','expression',4,'p_expression_random_max','parser5.py',146),
  ('expression -> RANDOM ( expression , expression )','expression',6,'p_expression_random_min_max','parser5.py',150),
]
