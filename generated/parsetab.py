
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMUL_OPrightUMINUSADD_OP CIRCLE COLOR IDENTIFIER MUL_OP NUMBER POINT PRINT RADIUS RECT ROTATE SIZE TRANSLATE WHILE program : subprogram  subprogram : statement  subprogram : statement ';' subprogram  statement : assignation\n        | structure\n        | shape\n        | animation  statement : PRINT expression  structure : WHILE expression '{' subprogram '}'  animation : translation  translation : TRANSLATE '(' IDENTIFIER ',' point_expression ')'  translation : ROTATE '(' IDENTIFIER ',' expression ')'  shape : circle_g \n        | rect_g  circle_g : CIRCLE '{' point_expression ',' RADIUS '(' expression ')' ',' color_expression '}'  rect_g : RECT '{' point_expression ',' size_expression ',' color_expression '}'  point_expression : POINT '(' expression ',' expression ')'  size_expression : SIZE '(' expression ',' expression ')'  color_expression : COLOR '(' expression ',' expression ',' expression ')' expression : expression ADD_OP expression\n            | expression MUL_OP expressionexpression : NUMBER\n        | IDENTIFIER expression : '(' expression ')'  expression : ADD_OP expression %prec UMINUS assignation : IDENTIFIER '=' assign_expression  assign_expression : expression\n        | shape "
    
_lr_action_items = {'PRINT':([0,18,38,],[8,8,8,]),'IDENTIFIER':([0,8,10,18,20,23,24,28,29,31,32,38,49,52,60,61,63,74,75,80,84,],[9,22,22,9,22,22,22,42,43,22,22,9,22,22,22,22,22,22,22,22,22,]),'WHILE':([0,18,38,],[10,10,10,]),'CIRCLE':([0,18,24,38,],[14,14,14,14,]),'RECT':([0,18,24,38,],[15,15,15,15,]),'TRANSLATE':([0,18,38,],[16,16,16,]),'ROTATE':([0,18,38,],[17,17,17,]),'$end':([1,2,3,4,5,6,7,11,12,13,19,21,22,30,33,35,36,37,44,45,46,53,64,65,73,82,],[0,-1,-2,-4,-5,-6,-7,-13,-14,-10,-8,-22,-23,-3,-25,-26,-27,-28,-20,-21,-24,-9,-11,-12,-16,-15,]),'}':([3,4,5,6,7,11,12,13,19,21,22,30,33,35,36,37,44,45,46,47,53,64,65,68,73,79,82,86,],[-2,-4,-5,-6,-7,-13,-14,-10,-8,-22,-23,-3,-25,-26,-27,-28,-20,-21,-24,53,-9,-11,-12,73,-16,82,-15,-19,]),';':([3,4,5,6,7,11,12,13,19,21,22,33,35,36,37,44,45,46,53,64,65,73,82,],[18,-4,-5,-6,-7,-13,-14,-10,-8,-22,-23,-25,-26,-27,-28,-20,-21,-24,-9,-11,-12,-16,-15,]),'NUMBER':([8,10,20,23,24,31,32,49,52,60,61,63,74,75,80,84,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'(':([8,10,16,17,20,23,24,31,32,40,49,52,54,57,60,61,63,69,74,75,80,84,],[23,23,28,29,23,23,23,23,23,49,23,23,60,63,23,23,23,74,23,23,23,23,]),'ADD_OP':([8,10,19,20,21,22,23,24,25,31,32,33,34,36,44,45,46,49,52,55,59,60,61,63,66,67,70,74,75,77,78,80,83,84,85,],[20,20,31,20,-22,-23,20,20,31,20,20,-25,31,31,-20,-21,-24,20,20,31,31,20,20,20,31,31,31,20,20,31,31,20,31,20,31,]),'=':([9,],[24,]),'{':([14,15,21,22,25,33,44,45,46,],[26,27,-22,-23,38,-25,-20,-21,-24,]),'MUL_OP':([19,21,22,25,33,34,36,44,45,46,55,59,66,67,70,77,78,83,85,],[32,-22,-23,32,-25,32,32,32,-21,-24,32,32,32,32,32,32,32,32,32,]),')':([21,22,33,34,44,45,46,58,59,66,67,72,78,85,],[-22,-23,-25,46,-20,-21,-24,64,65,71,72,-17,81,86,]),',':([21,22,33,39,41,42,43,44,45,46,55,56,70,71,72,77,81,83,],[-22,-23,-25,48,50,51,52,-20,-21,-24,61,62,75,76,-17,80,-18,84,]),'POINT':([26,27,51,],[40,40,40,]),'RADIUS':([48,],[54,]),'SIZE':([50,],[57,]),'COLOR':([62,76,],[69,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'subprogram':([0,18,38,],[2,30,47,]),'statement':([0,18,38,],[3,3,3,]),'assignation':([0,18,38,],[4,4,4,]),'structure':([0,18,38,],[5,5,5,]),'shape':([0,18,24,38,],[6,6,37,6,]),'animation':([0,18,38,],[7,7,7,]),'circle_g':([0,18,24,38,],[11,11,11,11,]),'rect_g':([0,18,24,38,],[12,12,12,12,]),'translation':([0,18,38,],[13,13,13,]),'expression':([8,10,20,23,24,31,32,49,52,60,61,63,74,75,80,84,],[19,25,33,34,36,44,45,55,59,66,67,70,77,78,83,85,]),'assign_expression':([24,],[35,]),'point_expression':([26,27,51,],[39,41,58,]),'size_expression':([50,],[56,]),'color_expression':([62,76,],[68,79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> subprogram','program',1,'p_program_statement','parser5.py',7),
  ('subprogram -> statement','subprogram',1,'p_program_subprogram','parser5.py',11),
  ('subprogram -> statement ; subprogram','subprogram',3,'p_program_recursive','parser5.py',15),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',19),
  ('statement -> structure','statement',1,'p_statement','parser5.py',20),
  ('statement -> shape','statement',1,'p_statement','parser5.py',21),
  ('statement -> animation','statement',1,'p_statement','parser5.py',22),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',26),
  ('structure -> WHILE expression { subprogram }','structure',5,'p_structure','parser5.py',30),
  ('animation -> translation','animation',1,'p_animation','parser5.py',34),
  ('translation -> TRANSLATE ( IDENTIFIER , point_expression )','translation',6,'p_animation_translation','parser5.py',38),
  ('translation -> ROTATE ( IDENTIFIER , expression )','translation',6,'p_animation_rotation','parser5.py',42),
  ('shape -> circle_g','shape',1,'p_shape','parser5.py',46),
  ('shape -> rect_g','shape',1,'p_shape','parser5.py',47),
  ('circle_g -> CIRCLE { point_expression , RADIUS ( expression ) , color_expression }','circle_g',11,'p_circle_g','parser5.py',51),
  ('rect_g -> RECT { point_expression , size_expression , color_expression }','rect_g',8,'p_rect_g','parser5.py',55),
  ('point_expression -> POINT ( expression , expression )','point_expression',6,'p_expression_point','parser5.py',59),
  ('size_expression -> SIZE ( expression , expression )','size_expression',6,'p_expression_size','parser5.py',63),
  ('color_expression -> COLOR ( expression , expression , expression )','color_expression',8,'p_expression_color','parser5.py',67),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',71),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',72),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',76),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',77),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',81),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',85),
  ('assignation -> IDENTIFIER = assign_expression','assignation',3,'p_assign','parser5.py',89),
  ('assign_expression -> expression','assign_expression',1,'p_assign_expression','parser5.py',93),
  ('assign_expression -> shape','assign_expression',1,'p_assign_expression','parser5.py',94),
]
